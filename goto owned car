local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- üåê Global Settings
getgenv().TeleportSettings = {
    Speed = 0.25, -- Delay before teleport (adjust as needed)
}

-- ‚úÖ Swim System for Safe Teleportation
getgenv().SwimMethod = false

local function enableSwimMethod()
    getgenv().SwimMethod = true
    task.wait(1)
end

local function disableSwimMethod()
    getgenv().SwimMethod = false
end

-- üöÄ SwimMethod Teleport Function
function SwimMethodBypassTeleport(destinationCFrame)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end

    local HRP = character.HumanoidRootPart

    enableSwimMethod()
    task.wait(getgenv().TeleportSettings.Speed)
    HRP.CFrame = destinationCFrame + Vector3.new(2, 0, 0)
    task.delay(0.25, function()
        disableSwimMethod()
    end)
end

-- üì¶ Teleport to Owned Car
local function teleportToOwnedCar()
    local civCars = workspace:FindFirstChild("CivCars")
    if not civCars then
        warn("CivCars folder not found!")
        return
    end

    local foundCar = nil

    for _, car in ipairs(civCars:GetChildren()) do
        if car:IsA("Model") then
            local ownerTag = car:FindFirstChild("Owner")
            if ownerTag and ownerTag:IsA("StringValue") and ownerTag.Value == player.Name then
                foundCar = car
                break
            end
        end
    end

    if not foundCar then
        Library:Notify({
            Title = "üö´ No Car Found",
            Description = "You don't have a car spawned.",
            Time = 5
        })
        return
    end

    local destination = foundCar:GetModelCFrame() + Vector3.new(0, 5, 0)
    SwimMethodBypassTeleport(destination)

    Library:Notify({
        Title = "‚úÖ Successfully unlocked all cars",
        Description = "You have been teleported to your vehicle.",
        Time = 5
    })
end

-- üöÄ Automatically teleport when script runs
teleportToOwnedCar()
